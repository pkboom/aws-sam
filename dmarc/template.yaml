AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: dmarc

Parameters:
  Env:
    Type: String
    Default: dev

Mappings:
  EnvMapping:
    dev:
      DmarcBucketName: inboxmonster-dev-dmarc-isolated-us-east-2-datalake
      DmarcQueueUrl: https://sqs.us-east-2.amazonaws.com/524978277775/inboxmonster-dev-dmarc-isolated-us-east-2-datalake-email
      DmarcQueueArn: arn:aws:sqs:us-east-2:524978277775:inboxmonster-dev-dmarc-isolated-us-east-2-datalake-email
      KinesisArn: arn:aws:kinesis:us-east-2:524978277775:stream/inboxmonster-dev-dmarc-isolated-us-east-2-stream
      KinesisName: inboxmonster-dev-dmarc-isolated-us-east-2-stream
      CacheEndpoint: inb-ca-1gegm4p9a3n56.n1ivfh.0001.use2.cache.amazonaws.com
      SubnetIds: subnet-04e2da7ef878971a5,subnet-08294e103b50c7144
      SecurityGroupIds: sg-0814a05a7dec5c820
    prod:
      DmarcBucketName: prod
      DmarcQueueUrl: prod
      DmarcQueueArn: prod
      KinesisArn: prod
      KinesisName: prod
      CacheEndpoint: prod
      SubnetIds: prod
      SecurityGroupIds: prod

Resources:
  DmarcFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.handler
      Runtime: nodejs18.x
      MemorySize: 1536
      Timeout: 900
      Layers:
        - !Ref AppLayer
      # DeploymentPreference:
      #   Type: AllAtOnce
      #   Alarms:
      #     - Ref: RecordsFunctionErrorAlarm
      Architectures:
        - x86_64
      Environment:
        Variables:
          CACHE_ENDPOINT: !FindInMap [EnvMapping, !Ref Env, CacheEndpoint]
          BUCKET_NAME: !FindInMap [EnvMapping, !Ref Env, DmarcBucketName]
          KINESIS_ARN: !FindInMap [EnvMapping, !Ref Env, KinesisArn]
      Policies:
        - S3FullAccessPolicy:
            BucketName: !FindInMap [EnvMapping, !Ref Env, DmarcBucketName]
        - KinesisCrudPolicy:
            # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html#kinesis-crud-policy
            StreamName: !FindInMap [EnvMapping, !Ref Env, KinesisName]
      VpcConfig:
        SecurityGroupIds: !Split [',', !FindInMap [EnvMapping, !Ref Env, SecurityGroupIds]]
        SubnetIds: !Split [',', !FindInMap [EnvMapping, !Ref Env, SubnetIds]]
      Events:
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventsource.html
        Invoker:
          Type: SQS
          Properties:
            Queue: !FindInMap [EnvMapping, !Ref Env, DmarcQueueArn]
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 20

  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/building-layers.html
  AppLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: app specific deps
      ContentUri: layer
      CompatibleRuntimes:
        - nodejs18.x
    Metadata:
      BuildMethod: nodejs18.x

Outputs:
  DmarcBucketName:
    Value: !FindInMap [EnvMapping, !Ref Env, DmarcBucketName]
  DmarcQueueUrl:
    Value: !FindInMap [EnvMapping, !Ref Env, DmarcQueueUrl]
  DmarcQueueArn:
    Value: !FindInMap [EnvMapping, !Ref Env, DmarcQueueArn]
  KinesisName:
    Value: !FindInMap [EnvMapping, !Ref Env, KinesisName]
