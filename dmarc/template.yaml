AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: dmarc

Parameters:
  Env:
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev

Mappings:
  EnvMapping:
    dev:
      DmarcBucketName: inboxmonster-dev-dmarc-isolated-us-east-2-datalake
      DmarcQueueName: inboxmonster-dev-dmarc-isolated-us-east-2-datalake-email
      DmarcQueueArn: arn:aws:sqs:us-east-2:524978277775:inboxmonster-dev-dmarc-isolated-us-east-2-datalake-email
    prod:
      DmarcBucketName: inboxmonster-dev-dmarc-isolated-us-east-2-datalake
      DmarcQueueName: inboxmonster-dev-dmarc-isolated-us-east-2-datalake-email
      DmarcQueueArn: arn:aws:sqs:us-east-2:524978277775:inboxmonster-dev-dmarc-isolated-us-east-2-datalake-email

Resources:
  DmarcFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.handler
      Runtime: nodejs18.x
      MemorySize: 4096
      Timeout: 300
      Layers:
        - !Ref AppLayer
      # DeploymentPreference:
      #   Type: AllAtOnce
      #   Alarms:
      #     - Ref: RecordsFunctionErrorAlarm
      Architectures:
        - x86_64
      Environment:
        Variables:
          # REDIS_HOST_ENDPOINT: !Ref ElastiCacheRedisClusterEndpoint
          BUCKET_NAME: !FindInMap [EnvMapping, !Ref Env, DmarcBucketName]
          # KINESIS_ARN: !Ref KinesisStreamArn
      Policies:
        # - S3ReadPolicy:
        - S3FullAccessPolicy:
            BucketName: !FindInMap [EnvMapping, !Ref Env, DmarcBucketName]
        # - S3FullAccessPolicy:
        #     BucketName: !Ref RecordBucket
        # - KinesisCrudPolicy:
        #     # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-template-list.html#kinesis-crud-policy
        #     StreamName: !Ref KinesisStreamName
      # VpcConfig:
      #   SecurityGroupIds:
      #     - !Ref SecurityGroupId
      #   SubnetIds:
      #     - !Ref PrivateSubnetId
      Events:
        # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-eventsource.html
        Invoker:
          Type: SQS
          Properties:
            Queue: !FindInMap [EnvMapping, !Ref Env, DmarcQueueArn]
            BatchSize: 1
            ScalingConfig:
              MaximumConcurrency: 50

  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/building-layers.html
  AppLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      Description: app specific deps
      ContentUri: layer
      CompatibleRuntimes:
        - nodejs18.x
    Metadata:
      BuildMethod: nodejs18.x

  # DmarcQueuePolicy:
  #   Type: 'AWS::SQS::QueuePolicy'
  #   Properties:
  #     PolicyDocument:
  #       Version: '2012-10-17'
  #       Id: QueuePolicy
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service: 's3.amazonaws.com'
  #           Action:
  #             - 'sqs:SendMessage'
  #           Resource: !FindInMap [EnvMapping, !Ref Env, DmarcQueueArn]
  #     Queues:
  #       - !FindInMap [EnvMapping, !Ref Env, DmarcQueueName]

  # DmarcQueue:
  #   Type: AWS::SQS::Queue
  #   Properties:
  #     VisibilityTimeout: 305 # should be greater that lambda timeout
  #     RedrivePolicy:
  #       deadLetterTargetArn: !GetAtt DeadLetterQueue.Arn
  #       maxReceiveCount: 3

  # # https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-dead-letter-queues.html
  # DeadLetterQueue:
  #   Type: AWS::SQS::Queue

Outputs:
  DmarcFunction:
    Value: !GetAtt DmarcFunction.Arn
  DmarcFunctionIamRole:
    Description: 'Implicit IAM Role created for DmarcFunction function'
    Value: !GetAtt DmarcFunctionRole.Arn
  DmarcBucketName:
    Value: !FindInMap [EnvMapping, !Ref Env, DmarcBucketName]
  DmarcQueueName:
    Value: !FindInMap [EnvMapping, !Ref Env, DmarcQueueName]
  DmarcQueueArn:
    Value: !FindInMap [EnvMapping, !Ref Env, DmarcQueueArn]
